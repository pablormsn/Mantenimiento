<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="mps4"><sessioninfo id="Pc-Jorge-8bdb14f" start="1713870348391" dump="1713870349049"/><sessioninfo id="Pc-Jorge-4f9d4997" start="1713870782268" dump="1713870782949"/><sessioninfo id="Pc-Jorge-7c42f1de" start="1713871172321" dump="1713871172929"/><sessioninfo id="Pc-Jorge-74bc184" start="1713871654765" dump="1713871655424"/><sessioninfo id="Pc-Jorge-f0434d07" start="1713871732694" dump="1713871733311"/><sessioninfo id="Pc-Jorge-fec8900d" start="1713872198319" dump="1713872198927"/><sessioninfo id="Pc-Jorge-39eb5a96" start="1713872654997" dump="1713872655637"/><sessioninfo id="Pc-Jorge-ead02ad6" start="1713872778682" dump="1713872779330"/><sessioninfo id="Pc-Jorge-1b862ce5" start="1713873592013" dump="1713873592631"/><sessioninfo id="Pc-Jorge-f13d5e4d" start="1713874868329" dump="1713874869059"/><sessioninfo id="Pc-Jorge-75b48341" start="1713875453820" dump="1713875454499"/><sessioninfo id="Pc-Jorge-631b85fc" start="1713875709623" dump="1713875710315"/><sessioninfo id="Pc-Jorge-ecd81cc5" start="1713875791992" dump="1713875792653"/><sessioninfo id="Pc-Jorge-966b027c" start="1713875923625" dump="1713875924380"/><sessioninfo id="Pc-Jorge-b9ea617c" start="1713876202842" dump="1713876203523"/><package name="org/mps/mutation"><class name="org/mps/mutation/SwapMutation" sourcefilename="SwapMutation.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutate" desc="([I)[I" line="40"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/mps/mutation/MutationOperator" sourcefilename="MutationOperator.java"/><sourcefile name="SwapMutation.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="4"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationOperator.java"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/mps/crossover"><class name="org/mps/crossover/CrossoverOperator" sourcefilename="CrossoverOperator.java"/><class name="org/mps/crossover/OnePointCrossover" sourcefilename="OnePointCrossover.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="crossover" desc="([I[I)[[I" line="36"><counter type="INSTRUCTION" missed="5" covered="79"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="87"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OnePointCrossover.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="12" mb="4" cb="4"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="2"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="87"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CrossoverOperator.java"/><counter type="INSTRUCTION" missed="5" covered="87"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/mps"><class name="org/mps/EvolutionaryAlgorithmException" sourcefilename="EvolutionaryAlgorithmException.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/mps/EvolutionaryAlgorithm" sourcefilename="EvolutionaryAlgorithm.java"><method name="&lt;init&gt;" desc="(Lorg/mps/selection/SelectionOperator;Lorg/mps/mutation/MutationOperator;Lorg/mps/crossover/CrossoverOperator;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutationOperator" desc="()Lorg/mps/mutation/MutationOperator;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMutationOperator" desc="(Lorg/mps/mutation/MutationOperator;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optimize" desc="([[I)[[I" line="57"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="better" desc="([I[I)Z" line="96"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelectionOperator" desc="()Lorg/mps/selection/SelectionOperator;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSelectionOperator" desc="(Lorg/mps/selection/SelectionOperator;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCrossoverOperator" desc="()Lorg/mps/crossover/CrossoverOperator;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCrossoverOperator" desc="(Lorg/mps/crossover/CrossoverOperator;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="187"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EvolutionaryAlgorithmException.java"><line nr="5" mi="2" ci="0" mb="0" cb="0"/><line nr="6" mi="1" ci="0" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EvolutionaryAlgorithm.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="6"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="8"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="2"/><line nr="80" mi="0" ci="9" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="187"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="191"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="2" covered="40"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/mps/selection"><class name="org/mps/selection/SelectionOperator" sourcefilename="SelectionOperator.java"/><class name="org/mps/selection/TournamentSelection" sourcefilename="TournamentSelection.java"><method name="&lt;init&gt;" desc="(I)V" line="30"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="select" desc="([I)[I" line="44"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TournamentSelection.java"><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="4"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="4"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SelectionOperator.java"/><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="8" covered="403"/><counter type="BRANCH" missed="4" covered="52"/><counter type="LINE" missed="3" covered="86"/><counter type="COMPLEXITY" missed="5" covered="40"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="5"/></report>